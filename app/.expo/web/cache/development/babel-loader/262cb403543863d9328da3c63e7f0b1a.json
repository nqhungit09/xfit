{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\application\\\\screens\\\\ExercisesByEquipment.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions } from 'react-navigation';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport Strings from \"../utils/Strings\";\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from \"../utils/ColorsApp\";\nimport BannerAd from \"../components/BannerAd\";\nimport ListEmpty from \"../components/ListEmpty\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar ExercisesByEquipment = function (_Component) {\n  _inherits(ExercisesByEquipment, _Component);\n\n  var _super = _createSuper(ExercisesByEquipment);\n\n  function ExercisesByEquipment(props) {\n    var _this;\n\n    _classCallCheck(this, ExercisesByEquipment);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n\n    _this.navigateToScreen = function (route) {\n      return function () {\n        var navigateAction = NavigationActions.navigate({\n          routeName: route\n        });\n\n        _this.props.navigation.dispatch(navigateAction);\n      };\n    };\n\n    _this.state = {\n      isLoading: true,\n      dataSource: []\n    };\n    return _this;\n  }\n\n  _createClass(ExercisesByEquipment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      return fetch(ConfigApp.URL + 'json/data_equipment.php?equipment=' + this.props.navigation.state.params.IdEquipment).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (_this2._isMounted) {\n          _this2.setState({\n            isLoading: false,\n            dataSource: responseJson\n          }, function () {});\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"ExerciseDetails\",\n    value: function ExerciseDetails(item) {\n      var navigateAction = NavigationActions.navigate({\n        routeName: 'ExerciseDetailsScreen',\n        params: {\n          item: item\n        }\n      });\n      this.props.navigation.dispatch(navigateAction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var dataSource = this.state.dataSource;\n\n      if (dataSource.length == []) {\n        return React.createElement(ListEmpty, {\n          title: Strings.ST140,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var params = this.props.navigation.state.params;\n      var IdEquipment = params ? params.IdEquipment : null;\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 1\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 1\n        }\n      }), React.createElement(View, {\n        style: {\n          padding: 5,\n          paddingTop: 10,\n          paddingBottom: 20,\n          backgroundColor: '#FFF',\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        refreshing: \"false\",\n        showsVerticalScrollIndicator: false,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(ListItem, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0,\n              backgroundColor: '#FFF',\n              opacity: 1,\n              borderColor: 'rgba(0,0,0,0.05)',\n              borderBottomWidth: 1,\n              marginVertical: 20\n            },\n            onPress: function onPress() {\n              return _this3.ExerciseDetails(item);\n            },\n            noIndent: true,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }\n          }, React.createElement(Thumbnail, {\n            square: true,\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.exercise_image\n            },\n            style: {\n              paddingLeft: 10,\n              marginLeft: 10,\n              width: 90,\n              height: 70\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }\n          }), React.createElement(Body, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 2,\n            style: {\n              fontSize: 14,\n              fontWeight: 'bold'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }\n          }, item.exercise_title.toUpperCase())), React.createElement(Right, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            note: true,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }\n          }, React.createElement(Ionicons, {\n            name: \"ios-arrow-forward\",\n            style: styles.icon_workout,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }\n          }))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        ListFooterComponent: this.renderFooter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 1\n        }\n      }), React.createElement(View, {\n        style: {\n          height: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 1\n        }\n      })), React.createElement(BannerAd, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 1\n        }\n      }));\n    }\n  }]);\n\n  return ExercisesByEquipment;\n}(Component);\n\nExercisesByEquipment.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: \"\" + navigation.state.params.TitleEquipment.toUpperCase(),\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons, {\n        name: 'md-arrow-back',\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        style: styles.arrowbackicon,\n        __self: ExercisesByEquipment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }\n      });\n    }\n  };\n};\n\nexport { ExercisesByEquipment as default };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/application/screens/ExercisesByEquipment.js"],"names":["React","Component","NavigationActions","AppPreLoader","Ionicons","LinearGradient","Container","Text","Body","Right","List","ListView","Thumbnail","ListItem","ConfigApp","Strings","Grid","Row","Col","ColorsApp","BannerAd","ListEmpty","styles","require","Dimensions","get","height","width","ExercisesByEquipment","props","_isMounted","navigateToScreen","route","navigateAction","navigate","routeName","navigation","dispatch","state","isLoading","dataSource","fetch","URL","params","IdEquipment","then","response","json","responseJson","setState","catch","error","console","item","length","ST140","background_general","padding","paddingTop","paddingBottom","backgroundColor","flex","paddingLeft","marginLeft","opacity","borderColor","borderBottomWidth","marginVertical","ExerciseDetails","uri","exercise_image","fontSize","fontWeight","exercise_title","toUpperCase","icon_workout","index","toString","renderFooter","navigationOptions","title","TitleEquipment","headerLeft","goBack","arrowbackicon"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport { NavigationActions } from 'react-navigation';\nimport AppPreLoader from '../components/AppPreLoader'; \nimport{ ImageBackground, Dimensions, View, TouchableOpacity, FlatList, Button, ActivityIndicator, Image, ScrollView, SafeAreaView, StatusBar } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport Strings from '../utils/Strings';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from '../utils/ColorsApp';\nimport BannerAd from '../components/BannerAd';\nimport ListEmpty from '../components/ListEmpty';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class ExercisesByEquipment extends Component {\n   static navigationOptions = ({ navigation }) => ({\n    title: `${navigation.state.params.TitleEquipment.toUpperCase()}`,\n    headerLeft: () =>  <Ionicons name={'md-arrow-back'} onPress={ () => { navigation.goBack() }} style={styles.arrowbackicon}/>,\n    });\n\n_isMounted = false;\n  \n  navigateToScreen = (route) => () => {\n    const navigateAction = NavigationActions.navigate({\n      routeName: route,\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource:[],\n    };\n  }\n\n  componentDidMount() {\n    \n       this._isMounted = true;\n       \n       return fetch(ConfigApp.URL+'json/data_equipment.php?equipment='+this.props.navigation.state.params.IdEquipment)\n         .then((response) => response.json())\n         .then((responseJson) => {\n          if (this._isMounted) {\n\n           this.setState({\n             isLoading: false,\n             dataSource: responseJson\n           }, function() {\n           });\n           }\n\n         })\n         .catch((error) => {\n           console.error(error);\n         });\n     }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  \n  ExerciseDetails (item) {\n    const navigateAction = NavigationActions.navigate({\n      routeName: 'ExerciseDetailsScreen',\n      params: {item}\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  render() {\n\n    if (this.state.isLoading) {\n      return (\n        <AppPreLoader/>\n      );\n    }\n\n    const dataSource = this.state.dataSource\n\n    if (dataSource.length == []) {\n      return (\n        <ListEmpty title={Strings.ST140}/>\n      );\n    } \n\n    const { params } = this.props.navigation.state;\n    const IdEquipment = params ? params.IdEquipment : null;\n\n    return (\n<Container style={styles.background_general}>\n\n<StatusBar barStyle=\"dark-content\"/>\n\n\n<View style={{padding: 5, paddingTop: 10, paddingBottom: 20, backgroundColor: '#FFF', flex: 1}}>\n\n\n<FlatList\n          data={ this.state.dataSource }\n          refreshing=\"false\"\n          showsVerticalScrollIndicator={false}\n          renderItem={({item}) =>\n                \n            <ListItem style={{paddingLeft: 0, marginLeft: 0, backgroundColor:'#FFF', opacity: 1, borderColor: 'rgba(0,0,0,0.05)', borderBottomWidth: 1, marginVertical: 20}}  onPress={() => this.ExerciseDetails(item)} noIndent>\n              <Thumbnail square source={{ uri: ConfigApp.URL+'images/'+item.exercise_image }} style={{paddingLeft: 10, marginLeft: 10, width: 90, height: 70}} />\n              <Body style={{paddingLeft: 0, marginLeft: 0}}>\n                <Text numberOfLines={2} style={{fontSize: 14, fontWeight: 'bold'}}>\n                {item.exercise_title.toUpperCase()}\n                </Text>\n              </Body>\n              <Right>\n                <Text note>\n                <Ionicons name=\"ios-arrow-forward\" style={styles.icon_workout}/>\n                </Text>\n              </Right>\n            </ListItem>\n          \n}\n        keyExtractor={(item, index) => index.toString()}\n        ListFooterComponent={this.renderFooter}\n\n\n        /> \n\n<View style={{height: 70}}></View>\n\n</View>\n\n\n<BannerAd/>\n</Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}