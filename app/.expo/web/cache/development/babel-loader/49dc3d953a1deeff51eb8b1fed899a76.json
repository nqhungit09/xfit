{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\application\\\\screens\\\\Diets.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport Strings from \"../utils/Strings\";\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from \"../utils/ColorsApp\";\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport BannerAd from \"../components/BannerAd\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Diets = function (_Component) {\n  _inherits(Diets, _Component);\n\n  var _super = _createSuper(Diets);\n\n  function Diets(props) {\n    var _this;\n\n    _classCallCheck(this, Diets);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n\n    _this.DietsByCategory = function (category_id, category_title) {\n      _this.props.navigation.navigate('DietsByCategoryScreen', {\n        IdCategory: category_id,\n        TitleCategory: category_title\n      });\n    };\n\n    _this.navigateToScreen = function (route) {\n      return function () {\n        var navigateAction = NavigationActions.navigate({\n          routeName: route\n        });\n\n        _this.props.navigation.dispatch(navigateAction);\n      };\n    };\n\n    _this.state = {\n      isLoading: true,\n      diets: [],\n      categories: []\n    };\n    return _this;\n  }\n\n  _createClass(Diets, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      var request_1_url = ConfigApp.URL + 'json/data_diets.php';\n      var request_2_url = ConfigApp.URL + 'json/data_categories.php';\n      fetch(request_1_url).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (_this2._isMounted) {\n          _this2.setState({\n            diets: responseJson.filter(function (x) {\n              return x.diet_featured == '1';\n            })\n          });\n        }\n      }).then(function () {\n        fetch(request_2_url).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          if (_this2._isMounted) {\n            _this2.setState({\n              categories: responseJson,\n              isLoading: false\n            });\n          }\n        }).done();\n      }).done();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"DietDetails\",\n    value: function DietDetails(item) {\n      var navigateAction = NavigationActions.navigate({\n        routeName: 'DietDetailsScreen',\n        params: {\n          item: item\n        }\n      });\n      this.props.navigation.dispatch(navigateAction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var params = this.props.navigation.state.params;\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 1\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 1\n        }\n      }), React.createElement(LinearGradient, {\n        colors: ['rgba(0,0,0,1)', 'rgba(0,0,0,0.5)', 'rgba(0,0,0,0.0)'],\n        style: {\n          position: 'absolute',\n          top: 0,\n          zIndex: 100,\n          paddingTop: 55,\n          paddingHorizontal: 30,\n          width: width\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 1\n        }\n      }, React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 1\n        }\n      }, React.createElement(Col, {\n        style: {\n          alignItems: 'flex-start',\n          alignContent: 'flex-start',\n          justifyContent: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, React.createElement(Ionicons, {\n        name: \"md-arrow-back\",\n        style: {\n          fontSize: 27,\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 1\n        }\n      }))), React.createElement(Col, {\n        size: 2,\n        style: {\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          color: '#fff',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }\n      }, Strings.ST3.toUpperCase())), React.createElement(Col, {\n        style: {\n          alignItems: 'flex-end',\n          alignContent: 'flex-end',\n          justifyContent: 'flex-end'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.navigateToScreen('CategoriesScreen'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, React.createElement(Ionicons, {\n        name: \"md-search\",\n        style: {\n          fontSize: 27,\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 1\n        }\n      }))))), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 1\n        }\n      }, React.createElement(SwiperFlatList, {\n        data: this.state.diets,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.DietDetails(item);\n            },\n            activeOpacity: 1,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }\n          }, React.createElement(ImageBackground, {\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.diet_image\n            },\n            style: styles.background_diets,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }\n          }, React.createElement(LinearGradient, {\n            colors: ['rgba(0,0,0,0.10)', 'rgba(0,0,0,0.45)', 'rgba(0,0,0,0.85)'],\n            style: styles.gradient_diets,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            style: styles.category_diets,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }\n          }, item.category_title.toUpperCase()), React.createElement(Text, {\n            numberOfLines: 2,\n            style: styles.title_diets,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }\n          }, item.diet_title))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 1\n        }\n      }), React.createElement(View, {\n        style: {\n          backgroundColor: ColorsApp.PRIMARY\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: {\n          paddingTop: 15,\n          paddingBottom: 15,\n          paddingLeft: 15,\n          fontSize: 14,\n          color: '#ffffff',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 1\n        }\n      }, Strings.ST41.toUpperCase())), React.createElement(View, {\n        style: {\n          padding: 5,\n          paddingTop: 10,\n          backgroundColor: '#FFF'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.categories,\n        numColumns: 2,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return React.createElement(TouchableOpacity, {\n            onPress: _this3.DietsByCategory.bind(_this3, item.category_id, item.category_title),\n            activeOpacity: 1,\n            style: {\n              flex: 1\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: {\n              margin: 5\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }\n          }, React.createElement(ImageBackground, {\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.category_image\n            },\n            style: styles.background_posts_2columns,\n            imageStyle: {\n              borderRadius: 8\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }\n          }, React.createElement(LinearGradient, {\n            colors: ['rgba(0,0,0,0.1)', 'rgba(0,0,0,0.8)'],\n            style: styles.gradient_posts_2columns,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            style: styles.title_posts_categories,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }\n          }, item.category_title.toUpperCase())))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 10\n        }\n      }))));\n    }\n  }]);\n\n  return Diets;\n}(Component);\n\nDiets.navigationOptions = {\n  headerShown: false\n};\nexport { Diets as default };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/application/screens/Diets.js"],"names":["React","Component","NavigationActions","StackNavigator","AppPreLoader","Ionicons","LinearGradient","Container","Text","Body","Right","List","ListView","Thumbnail","ListItem","ConfigApp","Strings","Grid","Row","Col","ColorsApp","SwiperFlatList","BannerAd","styles","require","Dimensions","get","height","width","Diets","props","_isMounted","DietsByCategory","category_id","category_title","navigation","navigate","IdCategory","TitleCategory","navigateToScreen","route","navigateAction","routeName","dispatch","state","isLoading","diets","categories","request_1_url","URL","request_2_url","fetch","then","response","json","responseJson","setState","filter","x","diet_featured","done","item","params","background_general","position","top","zIndex","paddingTop","paddingHorizontal","alignItems","alignContent","justifyContent","goBack","fontSize","color","fontWeight","ST3","toUpperCase","DietDetails","uri","diet_image","background_diets","gradient_diets","category_diets","title_diets","diet_title","index","toString","backgroundColor","PRIMARY","paddingBottom","paddingLeft","ST41","padding","bind","flex","margin","category_image","background_posts_2columns","borderRadius","gradient_posts_2columns","title_posts_categories","navigationOptions","headerShown"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from '../components/AppPreLoader'; \nimport{ ImageBackground, Dimensions, View, TouchableOpacity, FlatList, Button, Image, ScrollView, SafeAreaView, StatusBar } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport Strings from '../utils/Strings';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from '../utils/ColorsApp';\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport BannerAd from '../components/BannerAd';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class Diets extends Component {\n   static navigationOptions = {\n  headerShown: false\n};\n\n_isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      diets:[],\n      categories:[]\n    };\n  }\n\n  componentDidMount() {\n    \n    this._isMounted = true;\n\n    var request_1_url = ConfigApp.URL+'json/data_diets.php';\n    var request_2_url = ConfigApp.URL+'json/data_categories.php';\n\n    fetch(request_1_url).then((response) => response.json()).then((responseJson)  => {\n        if (this._isMounted) {\n          this.setState({\n            diets: responseJson.filter(x => x.diet_featured == '1')\n        });\n        }\n    }).then(()=>{\n        fetch(request_2_url).then((response) => response.json()).then((responseJson) => {\n         if (this._isMounted) {\n          this.setState({\n            categories: responseJson,\n            isLoading: false,\n         });\n        }\n     }).done();\n    }).done();\n\n     }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  \n  DietDetails (item) {\n    const navigateAction = NavigationActions.navigate({\n      routeName: 'DietDetailsScreen',\n      params: {item}\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\nDietsByCategory=(category_id, category_title)=>\n{\n      this.props.navigation.navigate('DietsByCategoryScreen', { IdCategory: category_id, TitleCategory: category_title });    \n}\n\n  navigateToScreen = (route) => () => {\n    const navigateAction = NavigationActions.navigate({\n      routeName: route,\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  render() {\n\n    if (this.state.isLoading) {\n      return (\n        <AppPreLoader/>\n      );\n    }\n\n    const { params } = this.props.navigation.state;\n\n    return (\n<Container style={styles.background_general}>\n\n<StatusBar barStyle=\"light-content\"/>\n\n<LinearGradient colors={['rgba(0,0,0,1)', 'rgba(0,0,0,0.5)', 'rgba(0,0,0,0.0)']} style={{position: 'absolute', top: 0, zIndex: 100, paddingTop: 55, paddingHorizontal: 30, width: width}}>\n\n<Grid>\n    <Col style={{alignItems: 'flex-start', alignContent: 'flex-start', justifyContent: 'flex-start'}}>\n      <TouchableOpacity onPress={() => this.props.navigation.goBack()}>\n<Ionicons name=\"md-arrow-back\" style={{fontSize: 27, color: '#fff'}}/>\n</TouchableOpacity>\n    </Col>\n        <Col size={2} style={{alignItems: 'center', alignContent: 'center', justifyContent: 'center'}}>\n    <Text style={{fontSize: 16, color: '#fff', fontWeight: 'bold' }}>{Strings.ST3.toUpperCase()}</Text>\n    </Col>\n    <Col style={{alignItems: 'flex-end', alignContent: 'flex-end', justifyContent: 'flex-end'}}>\n      <TouchableOpacity onPress={this.navigateToScreen('CategoriesScreen')}>\n<Ionicons name=\"md-search\" style={{fontSize: 27, color: '#fff'}}/>\n</TouchableOpacity>\n    </Col>\n</Grid>\n</LinearGradient>\n\n<ScrollView>\n\n<SwiperFlatList\n          data={ this.state.diets }\n          renderItem={({item}) => \n                <TouchableOpacity onPress={() => this.DietDetails(item)} activeOpacity={1}>\n                <ImageBackground source={{uri: ConfigApp.URL+'images/'+item.diet_image}} style={styles.background_diets}>\n                    \n                    <LinearGradient colors={['rgba(0,0,0,0.10)','rgba(0,0,0,0.45)', 'rgba(0,0,0,0.85)']} style={styles.gradient_diets}>\n                            <Text style={styles.category_diets}>{item.category_title.toUpperCase()}</Text>\n                            <Text numberOfLines={2} style={styles.title_diets}>{item.diet_title}</Text>\n                    </LinearGradient>\n                    \n                </ImageBackground>\n                </TouchableOpacity>\n}\n        keyExtractor={(item, index) => index.toString()}\n\n        />\n\n<View style={{backgroundColor: ColorsApp.PRIMARY}}>\n<Text style={{paddingTop: 15, paddingBottom: 15, paddingLeft: 15, fontSize: 14, color: '#ffffff', fontWeight: 'bold'}}>{Strings.ST41.toUpperCase()}</Text>\n</View>\n\n<View style={{padding: 5, paddingTop: 10, backgroundColor: '#FFF'}}>\n\n         <FlatList\n          data={ this.state.categories }\n          numColumns={2}\n          renderItem={({item, index}) => \n                <TouchableOpacity onPress={this.DietsByCategory.bind(this, item.category_id, item.category_title)} activeOpacity={1} style={{flex: 1}}>\n                <View style={{margin: 5}}>\n                <ImageBackground source={{uri: ConfigApp.URL+'images/'+item.category_image}} style={styles.background_posts_2columns} imageStyle={{borderRadius: 8}}>\n                    <LinearGradient colors={['rgba(0,0,0,0.1)', 'rgba(0,0,0,0.8)']} style={styles.gradient_posts_2columns}>\n                            <Text numberOfLines={1} style={styles.title_posts_categories}>{item.category_title.toUpperCase()}</Text>\n                    </LinearGradient>\n                </ImageBackground>\n                </View>\n                </TouchableOpacity>\n}\n        keyExtractor={(item, index) => index.toString()}\n\n        />\n\n\n</View>\n\n</ScrollView>\n\n\n</Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}