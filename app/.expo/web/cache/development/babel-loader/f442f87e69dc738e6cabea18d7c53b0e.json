{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\application\\\\screens\\\\EBodyparts.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions } from 'react-navigation';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport Strings from \"../utils/Strings\";\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from \"../utils/ColorsApp\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar EBodyparts = function (_Component) {\n  _inherits(EBodyparts, _Component);\n\n  var _super = _createSuper(EBodyparts);\n\n  function EBodyparts(props) {\n    var _this;\n\n    _classCallCheck(this, EBodyparts);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n\n    _this.navigateToScreen = function (route) {\n      return function () {\n        var navigateAction = NavigationActions.navigate({\n          routeName: route\n        });\n\n        _this.props.navigation.dispatch(navigateAction);\n      };\n    };\n\n    _this.ListExercisesByMuscle = function (bodypart_id, bodypart_title) {\n      _this.props.navigation.navigate('ExercisesByMuscleScreen', {\n        IdMuscle: bodypart_id,\n        TitleBodypart: bodypart_title\n      });\n    };\n\n    _this.state = {\n      isLoading: true,\n      dataSource: []\n    };\n    return _this;\n  }\n\n  _createClass(EBodyparts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      return fetch(ConfigApp.URL + 'json/data_bodyparts.php').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (_this2._isMounted) {\n          _this2.setState({\n            isLoading: false,\n            dataSource: responseJson\n          }, function () {});\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 1\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 1\n        }\n      }), React.createElement(View, {\n        style: {\n          padding: 5,\n          paddingTop: 10,\n          backgroundColor: '#FFF'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        refreshing: \"false\",\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: _this3.ListExercisesByMuscle.bind(_this3, item.bodypart_id, item.bodypart_title),\n            activeOpacity: 1,\n            style: {\n              flex: 1,\n              margin: 3\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          }, React.createElement(ImageBackground, {\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.bodypart_image\n            },\n            style: styles.background_2columns,\n            imageStyle: {\n              borderRadius: 8\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          }, React.createElement(LinearGradient, {\n            colors: ['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.6)'],\n            style: styles.gradient_2columns,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }\n          }, React.createElement(View, {\n            style: styles.title_categories_border,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }\n          }), React.createElement(LinearGradient, {\n            colors: ['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.6)'],\n            style: styles.title_2columns_background,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            style: styles.title_categories,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }\n          }, item.bodypart_title.toUpperCase())))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          height: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 1\n        }\n      })));\n    }\n  }]);\n\n  return EBodyparts;\n}(Component);\n\nEBodyparts.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: \"\" + Strings.ST37.toUpperCase(),\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons, {\n        name: 'md-arrow-back',\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        style: styles.arrowbackicon,\n        __self: EBodyparts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }\n      });\n    }\n  };\n};\n\nexport { EBodyparts as default };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/application/screens/EBodyparts.js"],"names":["React","Component","NavigationActions","AppPreLoader","Ionicons","LinearGradient","Container","Text","Body","Right","List","ListView","Thumbnail","ListItem","ConfigApp","Strings","Grid","Row","Col","ColorsApp","styles","require","Dimensions","get","height","width","EBodyparts","props","_isMounted","navigateToScreen","route","navigateAction","navigate","routeName","navigation","dispatch","ListExercisesByMuscle","bodypart_id","bodypart_title","IdMuscle","TitleBodypart","state","isLoading","dataSource","fetch","URL","then","response","json","responseJson","setState","catch","error","console","background_general","padding","paddingTop","backgroundColor","item","bind","flex","margin","uri","bodypart_image","background_2columns","borderRadius","gradient_2columns","title_categories_border","title_2columns_background","title_categories","toUpperCase","index","toString","navigationOptions","title","ST37","headerLeft","goBack","arrowbackicon"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport { NavigationActions } from 'react-navigation';\nimport AppPreLoader from '../components/AppPreLoader'; \nimport{ ImageBackground, Dimensions, View, TouchableOpacity, FlatList, Button, ActivityIndicator, Image, ScrollView, SafeAreaView, StatusBar } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport Strings from '../utils/Strings';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from '../utils/ColorsApp';\n\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class EBodyparts extends Component {\n   static navigationOptions = ({ navigation }) => ({\n    title: `${Strings.ST37.toUpperCase()}`,\n    headerLeft: () =>  <Ionicons name={'md-arrow-back'} onPress={ () => { navigation.goBack() }} style={styles.arrowbackicon}/>,\n    });\n\n_isMounted = false;\n\n\n  navigateToScreen = (route) => () => {\n    const navigateAction = NavigationActions.navigate({\n      routeName: route,\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource:[],\n    };\n  }\n\n  componentDidMount() {\n\n       this._isMounted = true;\n    \n       return fetch(ConfigApp.URL+'json/data_bodyparts.php')\n         .then((response) => response.json())\n         .then((responseJson) => {\n          if (this._isMounted) {\n           this.setState({\n             isLoading: false,\n             dataSource: responseJson\n           }, function() {\n           });\n          }\n         })\n         .catch((error) => {\n           console.error(error);\n         });\n     }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  \nListExercisesByMuscle=(bodypart_id, bodypart_title)=>\n{\n      this.props.navigation.navigate('ExercisesByMuscleScreen', { IdMuscle: bodypart_id, TitleBodypart: bodypart_title });    \n}\n\n  render() {\n\n    if (this.state.isLoading) {\n      return (\n        <AppPreLoader/>\n      );\n    }\n\n    return (\n<Container style={styles.background_general}>\n\n<StatusBar barStyle=\"dark-content\"/>\n\n\n<View style={{padding:5, paddingTop: 10, backgroundColor: '#FFF'}}>\n\n        <FlatList\n          data={ this.state.dataSource }\n          refreshing=\"false\"\n          showsVerticalScrollIndicator={false}\n          numColumns={2}\n          renderItem={({item}) => \n                <TouchableOpacity onPress={this.ListExercisesByMuscle.bind(this, item.bodypart_id, item.bodypart_title)} activeOpacity={1} style={{flex: 1, margin: 3}}>\n                <ImageBackground source={{uri: ConfigApp.URL+'images/'+item.bodypart_image}} style={styles.background_2columns} imageStyle={{borderRadius: 8}}>\n                    <LinearGradient colors={['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.6)']} style={styles.gradient_2columns}>\n                    <View style={styles.title_categories_border}></View>\n                    <LinearGradient colors={['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.6)']} style={styles.title_2columns_background}>\n                            <Text numberOfLines={1} style={styles.title_categories}>{item.bodypart_title.toUpperCase()}</Text>\n                    </LinearGradient>\n                    </LinearGradient>\n                </ImageBackground>\n                </TouchableOpacity>\n}\n        keyExtractor={(item, index) => index.toString()}\n\n        />\n\n<View style={{height: 10}}></View>\n</View>\n\n</Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}