{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\application\\\\screens\\\\Quotes.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport { Container, Header, View, DeckSwiper, Card, CardItem, Thumbnail, Text, Left, Body, Icon } from 'native-base';\nimport * as firebase from 'firebase';\nimport BannerAd from \"../components/BannerAd\";\nimport Strings from \"../utils/Strings\";\nimport ConfigApp from \"../utils/ConfigApp\";\nimport Toast from 'react-native-root-toast';\nimport ColorsApp from \"../utils/ColorsApp\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Quotes = function (_Component) {\n  _inherits(Quotes, _Component);\n\n  var _super = _createSuper(Quotes);\n\n  function Quotes(props) {\n    var _this;\n\n    _classCallCheck(this, Quotes);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this.state = {\n      isLoading: true,\n      quotes: []\n    };\n    return _this;\n  }\n\n  _createClass(Quotes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      return fetch(ConfigApp.URL + 'json/data_quotes.php').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (_this2._isMounted) {\n          _this2.setState({\n            isLoading: false,\n            quotes: responseJson\n          });\n        }\n      }).catch(function (error) {});\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"copyText\",\n    value: function copyText(quote_title) {\n      Clipboard.setString(quote_title);\n      Toast.show(Strings.ST57.toUpperCase(), {\n        duration: Toast.durations.SHORT,\n        position: Toast.positions.CENTER,\n        shadow: false,\n        animation: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var params = this.props.navigation.state.params;\n      var user = firebase.auth().currentUser;\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 1\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 1\n        }\n      }), React.createElement(View, {\n        style: {\n          marginHorizontal: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 1\n        }\n      }, React.createElement(DeckSwiper, {\n        dataSource: this.state.quotes,\n        renderItem: function renderItem(item) {\n          return React.createElement(TouchableOpacity, {\n            onPress: _this3.copyText.bind(_this3, item.quote_title),\n            activeOpacity: 1,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }\n          }, React.createElement(Card, {\n            style: {\n              elevation: 4,\n              marginTop: 30\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }\n          }, React.createElement(CardItem, {\n            cardBody: true,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: {\n              padding: 30,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              backgroundColor: ColorsApp.PRIMARY,\n              height: height * 0.8,\n              width: width * 0.90,\n              alignItems: 'center'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }\n          }, React.createElement(Text, {\n            style: {\n              position: 'absolute',\n              top: 15,\n              right: 30,\n              opacity: 0.3\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }\n          }, React.createElement(Ionicons, {\n            name: \"md-quote\",\n            style: {\n              fontSize: 144\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 90\n            }\n          })), React.createElement(Text, {\n            style: {\n              fontWeight: 'bold',\n              fontSize: 26,\n              color: '#fff'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }\n          }, item.quote_title.toUpperCase()), React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              color: '#fff',\n              position: 'absolute',\n              bottom: 15,\n              opacity: 0.3\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }\n          }, Strings.ST58.toUpperCase())))));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Quotes;\n}(Component);\n\nQuotes.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: \"\" + Strings.ST5.toUpperCase(),\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons, {\n        name: 'md-arrow-back',\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        style: styles.arrowbackicon,\n        __self: Quotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }\n      });\n    }\n  };\n};\n\nexport { Quotes as default };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/application/screens/Quotes.js"],"names":["React","Component","NavigationActions","StackNavigator","AppPreLoader","Ionicons","Grid","Row","Col","Container","Header","View","DeckSwiper","Card","CardItem","Thumbnail","Text","Left","Body","Icon","firebase","BannerAd","Strings","ConfigApp","Toast","ColorsApp","styles","require","Dimensions","get","height","width","Quotes","props","_isMounted","state","isLoading","quotes","fetch","URL","then","response","json","responseJson","setState","catch","error","quote_title","Clipboard","setString","show","ST57","toUpperCase","duration","durations","SHORT","position","positions","CENTER","shadow","animation","params","navigation","user","auth","currentUser","background_general","marginHorizontal","item","copyText","bind","elevation","marginTop","padding","flexDirection","justifyContent","backgroundColor","PRIMARY","alignItems","top","right","opacity","fontSize","fontWeight","color","bottom","ST58","navigationOptions","title","ST5","headerLeft","goBack","arrowbackicon"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from '../components/AppPreLoader';\nimport{ Dimensions, TouchableOpacity, FlatList, StatusBar, Clipboard, Image, ScrollView} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport { Container, Header, View, DeckSwiper, Card, CardItem, Thumbnail, Text, Left, Body, Icon } from 'native-base';\nimport * as firebase from 'firebase';\nimport BannerAd from '../components/BannerAd';\nimport Strings from '../utils/Strings';\nimport ConfigApp from '../utils/ConfigApp';\nimport Toast from 'react-native-root-toast';\nimport ColorsApp from '../utils/ColorsApp';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class Quotes extends Component {\n   static navigationOptions = ({ navigation }) => ({\n    title: `${Strings.ST5.toUpperCase()}`,\n    headerLeft: () =>  <Ionicons name={'md-arrow-back'} onPress={ () => { navigation.goBack() }} style={styles.arrowbackicon}/>,\n    });\n\n_isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      quotes: [],\n    };\n  }\n\ncomponentDidMount() {\n\n       this._isMounted = true;\n\n   return fetch(ConfigApp.URL+'json/data_quotes.php')\n   .then((response) => response.json())\n   .then((responseJson) => {\n    if (this._isMounted) {\n     this.setState({\n       isLoading: false,\n       quotes: responseJson\n     });\n     }\n   })\n   .catch((error) => {\n   });\n\n}\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\ncopyText(quote_title){\n\n  Clipboard.setString(quote_title);\n  \n  Toast.show(Strings.ST57.toUpperCase(), {duration: Toast.durations.SHORT, position: Toast.positions.CENTER, shadow: false, animation: true})\n\n}\n\n  render() {\n\n    if (this.state.isLoading) {\n      return (\n        <AppPreLoader/>\n      );\n    }\n\n    const { params } = this.props.navigation.state;\n    var user = firebase.auth().currentUser;\n\n\n\nreturn (\n\n<Container style={styles.background_general}>\n\n<StatusBar barStyle=\"dark-content\"/>\n\n<View style={{marginHorizontal: 20}}>\n          <DeckSwiper\n            dataSource={this.state.quotes}\n            renderItem={item =>\n              <TouchableOpacity onPress={this.copyText.bind(this, item.quote_title)} activeOpacity={1}>\n              <Card style={{ elevation: 4, marginTop: 30}}>\n                <CardItem cardBody>\n                  <View style={{ padding: 30, flexDirection: \"row\", justifyContent: \"center\", backgroundColor: ColorsApp.PRIMARY, height: height * 0.8, width: width * 0.90, alignItems: 'center'  }}>\n                  <Text style={{position: 'absolute', top: 15, right: 30, opacity: 0.3}}><Ionicons name=\"md-quote\" style={{fontSize: 144}} /></Text>\n                  <Text style={{fontWeight: 'bold', fontSize: 26, color: '#fff'}}>{item.quote_title.toUpperCase()}</Text>\n                  <Text style={{fontSize: 14, color: '#fff', position: 'absolute', bottom: 15, opacity: 0.3}}>{Strings.ST58.toUpperCase()}</Text>\n                  </View>\n                </CardItem>\n              </Card>\n              </TouchableOpacity>\n            }\n\n          />\n        </View>\n\n</Container>\n    );\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}