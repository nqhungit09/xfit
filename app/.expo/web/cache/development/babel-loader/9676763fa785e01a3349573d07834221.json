{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { Root } from \"native-base\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AppPreLoader from \"./application/components/AppPreLoader\";\nimport firebaseConfig from \"./application/utils/Firebase\";\nimport * as firebase from 'firebase';\nfirebase.initializeApp(firebaseConfig);\nimport GuestNavigation from \"./application/navigations/Guest\";\nimport LoggedNavigation from \"./application/navigations/Logged\";\nconsole.disableYellowBox = true;\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      isLogged: false,\n      loaded: false,\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"_loadAssetsAsync\",\n    value: function _loadAssetsAsync() {\n      var imageAssets;\n      return _regeneratorRuntime.async(function _loadAssetsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              imageAssets = cacheImages([require(\"./assets/images/bg.jpg\"), require(\"./assets/images/goals.jpg\"), require(\"./assets/images/levels.jpg\"), require(\"./assets/images/header.jpg\"), require(\"./assets/images/bodyparts.jpg\"), require(\"./assets/images/equipments.jpg\"), require(\"./assets/images/logo.png\"), require(\"./assets/images/logo_dark.png\"), require(\"./assets/images/workouts.png\"), require(\"./assets/images/exercises.png\"), require(\"./assets/images/calculator.png\"), require(\"./assets/images/diets.png\"), require(\"./assets/images/store.png\"), require(\"./assets/images/blog.png\"), require(\"./assets/images/quotes.png\"), require(\"./assets/images/checked.png\"), require(\"./assets/images/nointernet.png\"), require(\"./assets/images/contact.png\"), require(\"./assets/images/underweight.png\"), require(\"./assets/images/normal.png\"), require(\"./assets/images/overweight.png\"), require(\"./assets/images/obesity.png\")]);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Roboto_medium: require(\"native-base/Fonts/Roboto_medium.ttf\"),\n                'Entypo': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Entypo.ttf'),\n                'FontAwesome': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf'),\n                'Ionicons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf'),\n                'MaterialCommunityIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf'),\n                'SimpleLineIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/SimpleLineIcons.ttf'),\n                'FontAwesome': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf')\n              }));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().onAuthStateChanged(function (user) {\n                if (user !== null) {\n                  _this2.setState({\n                    isLogged: true,\n                    loaded: true\n                  });\n                } else {\n                  _this2.setState({\n                    isLogged: false,\n                    loaded: true\n                  });\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.isReady) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadAssetsAsync,\n          onFinish: function onFinish() {\n            return _this3.setState({\n              isReady: true\n            });\n          },\n          onError: console.warn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var _this$state = this.state,\n          isLogged = _this$state.isLogged,\n          loaded = _this$state.loaded,\n          isReady = _this$state.isReady;\n\n      if (!loaded) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }\n        });\n      }\n\n      if (isLogged && isReady) {\n        return React.createElement(Root, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }\n        }, React.createElement(StatusBar, {\n          barStyle: \"light-content\",\n          translucent: true,\n          backgroundColor: 'transparent',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }\n        }), React.createElement(LoggedNavigation, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        return React.createElement(Root, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }\n        }, React.createElement(StatusBar, {\n          barStyle: \"dark-content\",\n          translucent: true,\n          backgroundColor: 'transparent',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }\n        }), React.createElement(GuestNavigation, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/App.js"],"names":["React","Asset","Font","AppLoading","Root","AppPreLoader","firebaseConfig","firebase","initializeApp","GuestNavigation","LoggedNavigation","console","disableYellowBox","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","App","state","isLogged","loaded","isReady","imageAssets","require","Promise","all","loadAsync","Roboto_medium","auth","onAuthStateChanged","user","setState","_loadAssetsAsync","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { Root } from \"native-base\";\nimport { StatusBar } from \"react-native\";\nimport AppPreLoader from \"./application/components/AppPreLoader\";\nimport firebaseConfig from './application/utils/Firebase';\nimport * as firebase from 'firebase';\nfirebase.initializeApp(firebaseConfig);\n\nimport GuestNavigation from './application/navigations/Guest';\nimport LoggedNavigation from './application/navigations/Logged';\n\nconsole.disableYellowBox = true;\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nexport default class App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      isLogged: false,\n      loaded: false,\n      isReady: false,\n    }\n  }\n\nasync _loadAssetsAsync() {\n    const imageAssets = cacheImages([\n      require('./assets/images/bg.jpg'),\n      require('./assets/images/goals.jpg'),\n      require('./assets/images/levels.jpg'),\n      require('./assets/images/header.jpg'),\n      require('./assets/images/bodyparts.jpg'),\n      require('./assets/images/equipments.jpg'),\n      require('./assets/images/logo.png'),\n      require('./assets/images/logo_dark.png'),\n      require('./assets/images/workouts.png'),\n      require('./assets/images/exercises.png'),\n      require('./assets/images/calculator.png'),\n      require('./assets/images/diets.png'),\n      require('./assets/images/store.png'),\n      require('./assets/images/blog.png'),\n      require('./assets/images/quotes.png'),\n      require('./assets/images/checked.png'),\n      require('./assets/images/nointernet.png'),\n      require('./assets/images/contact.png'),\n      require('./assets/images/underweight.png'),\n      require('./assets/images/normal.png'),\n      require('./assets/images/overweight.png'),\n      require('./assets/images/obesity.png'),\n    ]);\n\n    await Promise.all([...imageAssets]);\n  }\n\n  async componentDidMount () {\n\n      await Font.loadAsync({\n      Roboto_medium: require(\"native-base/Fonts/Roboto_medium.ttf\"),\n      'Entypo': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Entypo.ttf'),\n      'FontAwesome': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf'),\n      'Ionicons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf'),\n      'MaterialCommunityIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf'),\n      'SimpleLineIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/SimpleLineIcons.ttf'),\n      'FontAwesome': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf')\n    });\n\n\n\n    await firebase.auth().onAuthStateChanged((user) => {\n      if(user !== null) {\n        this.setState({\n          isLogged: true,\n          loaded: true\n        });\n      } else {\n        this.setState({\n          isLogged: false,\n          loaded: true\n        });\n      }\n    })\n\n  }\n\n  render() {\n\n        if (!this.state.isReady) {\n      return (\n        <AppLoading\n          startAsync={this._loadAssetsAsync}\n          onFinish={() => this.setState({ isReady: true })}\n          onError={console.warn}\n        />\n      );\n    }\n\n    const {isLogged, loaded, isReady} = this.state;\n\n    if ( ! loaded) {\n      return (\n        <AppPreLoader/>\n        );\n    }\n\n    if(isLogged && isReady) {\n      return (\n        <Root>\n        <StatusBar barStyle=\"light-content\" translucent={true} backgroundColor={'transparent'} />\n        \n        <LoggedNavigation />\n        </Root>\n        );\n    } else {\n      return (\n        <Root>\n        <StatusBar barStyle=\"dark-content\" translucent={true} backgroundColor={'transparent'} />\n        <GuestNavigation />\n        </Root>\n        );\n    }\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}