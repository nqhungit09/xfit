{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\application\\\\screens\\\\PostsByTag.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport Strings from \"../utils/Strings\";\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from \"../utils/ColorsApp\";\nimport ListEmpty from \"../components/ListEmpty\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar PostsByTag = function (_Component) {\n  _inherits(PostsByTag, _Component);\n\n  var _super = _createSuper(PostsByTag);\n\n  function PostsByTag(props) {\n    var _this;\n\n    _classCallCheck(this, PostsByTag);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n\n    _this.navigateToScreen = function (route) {\n      return function () {\n        var navigateAction = NavigationActions.navigate({\n          routeName: route\n        });\n\n        _this.props.navigation.dispatch(navigateAction);\n      };\n    };\n\n    _this.state = {\n      isLoading: true,\n      dataSource: []\n    };\n    return _this;\n  }\n\n  _createClass(PostsByTag, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      return fetch(ConfigApp.URL + 'json/data_posts.php?tag=' + this.props.navigation.state.params.IdTag).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (_this2._isMounted) {\n          _this2.setState({\n            isLoading: false,\n            dataSource: responseJson\n          }, function () {});\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"PostDetails\",\n    value: function PostDetails(item) {\n      var navigateAction = NavigationActions.navigate({\n        routeName: 'PostDetailsScreen',\n        params: {\n          item: item\n        }\n      });\n      this.props.navigation.dispatch(navigateAction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var dataSource = this.state.dataSource;\n\n      if (dataSource.length == []) {\n        return React.createElement(ListEmpty, {\n          title: Strings.ST143,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var params = this.props.navigation.state.params;\n      var IdTag = params ? params.IdTag : null;\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 1\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 1\n        }\n      }), React.createElement(View, {\n        style: {\n          padding: 5,\n          paddingTop: 10,\n          backgroundColor: '#FFF',\n          flex: 1,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        refreshing: \"false\",\n        showsVerticalScrollIndicator: false,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.PostDetails(item);\n            },\n            activeOpacity: 1,\n            style: {\n              marginBottom: 5\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }\n          }, React.createElement(ImageBackground, {\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.post_image\n            },\n            style: styles.background_card,\n            imageStyle: {\n              borderRadius: 8\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }\n          }, React.createElement(LinearGradient, {\n            colors: ['rgba(0,0,0,0.3)', 'rgba(0,0,0,0.8)'],\n            style: styles.gradient_card,\n            imageStyle: {\n              borderRadius: 8\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            style: styles.category_card,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }\n          }, item.tag_title.toUpperCase()), React.createElement(Text, {\n            numberOfLines: 2,\n            style: styles.title_card,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }\n          }, item.post_title))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 1\n        }\n      })));\n    }\n  }]);\n\n  return PostsByTag;\n}(Component);\n\nPostsByTag.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: \"\" + navigation.state.params.TitleTag.toUpperCase(),\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons, {\n        name: 'md-arrow-back',\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        style: styles.arrowbackicon,\n        __self: PostsByTag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }\n      });\n    }\n  };\n};\n\nexport { PostsByTag as default };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/application/screens/PostsByTag.js"],"names":["React","Component","NavigationActions","StackNavigator","AppPreLoader","Ionicons","LinearGradient","Container","Text","Body","Right","List","ListView","Thumbnail","ListItem","ConfigApp","Strings","Grid","Row","Col","ColorsApp","ListEmpty","styles","require","Dimensions","get","height","width","PostsByTag","props","_isMounted","navigateToScreen","route","navigateAction","navigate","routeName","navigation","dispatch","state","isLoading","dataSource","fetch","URL","params","IdTag","then","response","json","responseJson","setState","catch","error","console","item","length","ST143","background_general","padding","paddingTop","backgroundColor","flex","alignItems","alignContent","justifyContent","PostDetails","marginBottom","uri","post_image","background_card","borderRadius","gradient_card","category_card","tag_title","toUpperCase","title_card","post_title","index","toString","navigationOptions","title","TitleTag","headerLeft","goBack","arrowbackicon"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from '../components/AppPreLoader'; \nimport{ ImageBackground, Dimensions, View, TouchableOpacity, FlatList, Button, ActivityIndicator, Image, ScrollView, SafeAreaView, StatusBar } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport Strings from '../utils/Strings';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from '../utils/ColorsApp';\nimport ListEmpty from '../components/ListEmpty';\n\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class PostsByTag extends Component {\n   static navigationOptions = ({ navigation }) => ({\n    title: `${navigation.state.params.TitleTag.toUpperCase()}`,\n    headerLeft: () =>  <Ionicons name={'md-arrow-back'} onPress={ () => { navigation.goBack() }} style={styles.arrowbackicon}/>,\n    });\n\n_isMounted = false;\n\n  navigateToScreen = (route) => () => {\n    const navigateAction = NavigationActions.navigate({\n      routeName: route,\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource:[],\n    };\n  }\n\n  componentDidMount() {\n    \n       this._isMounted = true;\n\n       return fetch(ConfigApp.URL+'json/data_posts.php?tag='+this.props.navigation.state.params.IdTag)\n         .then((response) => response.json())\n         .then((responseJson) => {\n          if (this._isMounted) {\n           this.setState({\n             isLoading: false,\n             dataSource: responseJson\n           }, function() {\n           });\n          }\n         })\n         .catch((error) => {\n           console.error(error);\n         });\n     }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  PostDetails (item) {\n    const navigateAction = NavigationActions.navigate({\n      routeName: 'PostDetailsScreen',\n      params: {item}\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  render() {\n\n    if (this.state.isLoading) {\n      return (\n        <AppPreLoader/>\n      );\n    }\n\n    const dataSource = this.state.dataSource\n\n    if (dataSource.length == []) {\n      return (\n        <ListEmpty title={Strings.ST143}/>\n      );\n    } \n\n    const { params } = this.props.navigation.state;\n    const IdTag = params ? params.IdTag : null;\n\n    return (\n<Container style={styles.background_general}>\n\n<StatusBar barStyle=\"dark-content\"/>\n\n\n<View style={{padding: 5, paddingTop: 10, backgroundColor: '#FFF', flex: 1, alignItems: 'center', alignContent: 'center', justifyContent: 'center'}}>\n\n<FlatList\n          data={ this.state.dataSource }\n          refreshing=\"false\"\n          showsVerticalScrollIndicator={false}\n          renderItem={({item}) => \n                <TouchableOpacity onPress={() => this.PostDetails(item)} activeOpacity={1} style={{marginBottom: 5}}>\n                <ImageBackground source={{uri: ConfigApp.URL+'images/'+item.post_image}} style={styles.background_card} imageStyle={{borderRadius: 8}}>\n                    <LinearGradient colors={['rgba(0,0,0,0.3)', 'rgba(0,0,0,0.8)']} style={styles.gradient_card} imageStyle={{borderRadius: 8}}>\n                    <Text style={styles.category_card}>{item.tag_title.toUpperCase()}</Text>\n                    <Text numberOfLines={2} style={styles.title_card}>{item.post_title}</Text>\n                    </LinearGradient>\n                </ImageBackground>\n                </TouchableOpacity>\n}\n        keyExtractor={(item, index) => index.toString()}\n        \n\n        />\n\n</View>\n\n\n</Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}