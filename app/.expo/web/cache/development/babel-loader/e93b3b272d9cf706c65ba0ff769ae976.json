{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\application\\\\screens\\\\Exercises.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions } from 'react-navigation';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport Strings from \"../utils/Strings\";\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from \"../utils/ColorsApp\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Exercises = function (_Component) {\n  _inherits(Exercises, _Component);\n\n  var _super = _createSuper(Exercises);\n\n  function Exercises() {\n    var _this;\n\n    _classCallCheck(this, Exercises);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.navigateToScreen = function (route) {\n      return function () {\n        var navigateAction = NavigationActions.navigate({\n          routeName: route\n        });\n\n        _this.props.navigation.dispatch(navigateAction);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Exercises, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 1\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 1\n        }\n      }), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: {\n          padding: 5,\n          paddingTop: 10,\n          backgroundColor: '#FFF',\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 1\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.navigateToScreen('EBodypartsScreen'),\n        activeOpacity: 1,\n        style: {\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 1\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../../assets/images/bodyparts.jpg\"),\n        style: styles.card_general,\n        imageStyle: {\n          borderRadius: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 1\n        }\n      }, React.createElement(LinearGradient, {\n        colors: ['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.9)'],\n        style: styles.gradient_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: styles.title_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }\n      }, Strings.ST37.toUpperCase()), React.createElement(Text, {\n        style: styles.subtitle_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }\n      }, Strings.ST40.toUpperCase())))), React.createElement(TouchableOpacity, {\n        onPress: this.navigateToScreen('EquipmentsScreen'),\n        activeOpacity: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 1\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../../assets/images/equipments.jpg\"),\n        style: styles.card_general,\n        imageStyle: {\n          borderRadius: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 1\n        }\n      }, React.createElement(LinearGradient, {\n        colors: ['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.9)'],\n        style: styles.gradient_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: styles.title_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }\n      }, Strings.ST38.toUpperCase()), React.createElement(Text, {\n        style: styles.subtitle_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      }, Strings.ST39.toUpperCase())))))));\n    }\n  }]);\n\n  return Exercises;\n}(Component);\n\nExercises.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: \"\" + Strings.ST2.toUpperCase(),\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons, {\n        name: 'md-arrow-back',\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        style: styles.arrowbackicon,\n        __self: Exercises,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }\n      });\n    }\n  };\n};\n\nexport { Exercises as default };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/application/screens/Exercises.js"],"names":["React","Component","NavigationActions","AppPreLoader","Ionicons","LinearGradient","Container","Text","Body","Right","List","ListView","Thumbnail","ListItem","ConfigApp","Strings","Grid","Row","Col","ColorsApp","styles","require","Dimensions","get","height","width","Exercises","navigateToScreen","route","navigateAction","navigate","routeName","props","navigation","dispatch","background_general","padding","paddingTop","backgroundColor","alignItems","alignContent","justifyContent","marginBottom","card_general","borderRadius","gradient_general","title_general","ST37","toUpperCase","subtitle_general","ST40","ST38","ST39","navigationOptions","title","ST2","headerLeft","goBack","arrowbackicon"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport { NavigationActions } from 'react-navigation';\nimport AppPreLoader from '../components/AppPreLoader'; \nimport{ ImageBackground, Dimensions, View, TouchableOpacity, FlatList, Button, ActivityIndicator, Image, ScrollView, SafeAreaView, StatusBar } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport Strings from '../utils/Strings';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport ColorsApp from '../utils/ColorsApp';\n\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class Exercises extends Component {\n   static navigationOptions = ({ navigation }) => ({\n    title: `${Strings.ST2.toUpperCase()}`,\n    headerLeft: () =>  <Ionicons name={'md-arrow-back'} onPress={ () => { navigation.goBack() }} style={styles.arrowbackicon}/>,\n    });\n\n  navigateToScreen = (route) => () => {\n    const navigateAction = NavigationActions.navigate({\n      routeName: route,\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  render() {\n\n\n    return (\n<Container style={styles.background_general}>\n\n<StatusBar barStyle=\"dark-content\"/>\n\n<ScrollView>\n\n<View style={{padding: 5, paddingTop: 10, backgroundColor: '#FFF', alignItems: 'center', alignContent: 'center', justifyContent: 'center'}}>\n\n<TouchableOpacity onPress={this.navigateToScreen('EBodypartsScreen')} activeOpacity={1} style={{marginBottom: 10}}>\n<ImageBackground source={require('../../assets/images/bodyparts.jpg')} style={styles.card_general} imageStyle={{borderRadius: 8}}>\n<LinearGradient colors={['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.9)']} style={styles.gradient_general}>                        \n    <Text style={styles.title_general}>{Strings.ST37.toUpperCase()}</Text>\n    <Text style={styles.subtitle_general}>{Strings.ST40.toUpperCase()}</Text>\n</LinearGradient>\n</ImageBackground>\n</TouchableOpacity>\n\n\n<TouchableOpacity onPress={this.navigateToScreen('EquipmentsScreen')} activeOpacity={1}>\n<ImageBackground source={require('../../assets/images/equipments.jpg')} style={styles.card_general} imageStyle={{borderRadius: 8}}>\n<LinearGradient colors={['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.9)']} style={styles.gradient_general}>                        \n    <Text style={styles.title_general}>{Strings.ST38.toUpperCase()}</Text>\n    <Text style={styles.subtitle_general}>{Strings.ST39.toUpperCase()}</Text>\n</LinearGradient>\n</ImageBackground>\n</TouchableOpacity>\n\n</View>\n\n</ScrollView>\n\n\n</Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}