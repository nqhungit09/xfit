{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xfit.vn\\\\app\\\\application\\\\forms\\\\CommentEmpty.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Strings from \"../utils/Strings\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar CommentEmpty = function (_React$Component) {\n  _inherits(CommentEmpty, _React$Component);\n\n  var _super = _createSuper(CommentEmpty);\n\n  function CommentEmpty() {\n    _classCallCheck(this, CommentEmpty);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CommentEmpty, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: height * 0.85\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          marginBottom: 8,\n          color: '#b5b5b5'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, Strings.ST86.toUpperCase()));\n    }\n  }]);\n\n  return CommentEmpty;\n}(React.Component);\n\nexport default CommentEmpty;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/xfit.vn/app/application/forms/CommentEmpty.js"],"names":["React","Component","Strings","Dimensions","get","height","width","CommentEmpty","alignItems","justifyContent","fontSize","marginBottom","color","ST86","toUpperCase"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAEA,OAAOC,OAAP;;sBACsBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAjBC,M,mBAAAA,M;IAAQC,K,mBAAAA,K;;IAEPC,Y;;;;;;;;;;;;;6BAEM;AAER,aAEJ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE,QAAb;AAAuBC,UAAAA,cAAc,EAAE,QAAvC;AAAiDJ,UAAAA,MAAM,EAAEA,MAAM,GAAC;AAAhE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,QAAQ,EAAE,EAAX;AAAeC,UAAAA,YAAY,EAAE,CAA7B;AAAgCC,UAAAA,KAAK,EAAE;AAAvC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiEV,OAAO,CAACW,IAAR,CAAaC,WAAb,EAAjE,CADN,CAFI;AAOD;;;;EAXwBd,KAAK,CAACC,S;;AAejC,eAAeM,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport{ Image, View, Text, Dimensions} from 'react-native';\nimport Strings from '../utils/Strings';\nvar {height, width} = Dimensions.get('window');\n\nclass CommentEmpty extends React.Component {\n\n  render () {\n\n    return (\n\n<View style={{alignItems: 'center', justifyContent: 'center', height: height*0.85}}>\n      <Text style={{fontSize: 16, marginBottom: 8, color: '#b5b5b5'}}>{Strings.ST86.toUpperCase()}</Text>\n</View>\n\n    )\n  }\n\n}\n\nexport default CommentEmpty;"]},"metadata":{},"sourceType":"module"}